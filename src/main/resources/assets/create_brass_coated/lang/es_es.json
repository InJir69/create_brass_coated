{
  "block.create_brass_coated.brass_adjustable_chain_gearshift": "Cadena de transmisión ajustada de bronce",
  "block.create_brass_coated.brass_basin": "Brass Basin",
  "block.create_brass_coated.brass_clutch": "Embrague de bronce",
  "block.create_brass_coated.brass_deployer": "Desplegador de bronce",
  "block.create_brass_coated.brass_depot": "Depósito de bronce",
  "block.create_brass_coated.brass_encased_chain_drive": "Cadena de transmisión revestida de bronce",
  "block.create_brass_coated.brass_encased_fan": "Ventilador revestido de bronce",
  "block.create_brass_coated.brass_gearbox": "Caja de transmisión de bronce",
  "block.create_brass_coated.brass_gearshift": "Caja de cambios de bronce",
  "block.create_brass_coated.brass_girder": "Viga de bronce",
  "block.create_brass_coated.brass_girder_encased_shaft": "Brass Girder Encased Shaft",
  "block.create_brass_coated.brass_mechanical_drill": "Taladro mecánico de bronce",
  "block.create_brass_coated.brass_mechanical_harvester": "Cosechadora mecánica de bronce",
  "block.create_brass_coated.brass_mechanical_mixer": "Mezcladora mecánica de bronce",
  "block.create_brass_coated.brass_mechanical_plough": "Arado mecánico de bronce",
  "block.create_brass_coated.brass_mechanical_press": "Prensa mecánica de bronce",
  "block.create_brass_coated.brass_mechanical_saw": "Sierra mecánica de bronce",
  "block.create_brass_coated.brass_nozzle": "Boquilla de bronce",
  "block.create_brass_coated.brass_portable_storage_interface": "Interfaz de almacenamiento portátil de bronce",
  "block.create_brass_coated.brass_weighted_ejector": "Eyector de peso de bronce",
  "item.create_brass_coated.vertical_brass_gearbox": "Caja de transmisión vertical de bronce",
  
  "create_brass_coated.ponder.hold_to_ponder": "Hold [%1$s] to Ponder",
  "create_brass_coated.ponder.subject": "Subject of this scene",
  "create_brass_coated.ponder.pondering": "Pondering about...",
  "create_brass_coated.ponder.identify_mode": "Identify mode active.\nUnpause with [%1$s]",
  "create_brass_coated.ponder.associated": "Associated Entries",
  "create_brass_coated.ponder.close": "Close",
  "create_brass_coated.ponder.identify": "Identify",
  "create_brass_coated.ponder.next": "Next Scene",
  "create_brass_coated.ponder.next_up": "Up Next:",
  "create_brass_coated.ponder.previous": "Previous Scene",
  "create_brass_coated.ponder.replay": "Replay",
  "create_brass_coated.ponder.think_back": "Think Back",
  "create_brass_coated.ponder.slow_text": "Comfy Reading",
  "create_brass_coated.ponder.exit": "Exit",
  "create_brass_coated.ponder.welcome": "Welcome to Ponder",
  "create_brass_coated.ponder.categories": "Available Categories in Create",
  "create_brass_coated.ponder.index_description": "Click one of the icons to learn about its associated Items and Blocks",
  "create_brass_coated.ponder.index_title": "Ponder Index",
  "create_brass_coated.ponder.shared.rpm16": "16 RPM",
  "create_brass_coated.ponder.shared.behaviour_modify_wrench": "This behaviour can be modified using a Wrench",
  "create_brass_coated.ponder.shared.storage_on_contraption": "Inventories attached to the Contraption will pick up their drops automatically",
  "create_brass_coated.ponder.shared.sneak_and": "Sneak +",
  "create_brass_coated.ponder.shared.rpm8": "8 RPM",
  "create_brass_coated.ponder.shared.ctrl_and": "Ctrl +",
  "create_brass_coated.ponder.shared.rpm32": "32 RPM",
  "create_brass_coated.ponder.shared.rpm16_source": "Source: 16 RPM",
  "create_brass_coated.ponder.shared.movement_anchors": "With the help of Super Glue, larger structures can be moved.",
  "create_brass_coated.ponder.tag.redstone": "Logic Components",
  "create_brass_coated.ponder.tag.redstone.description": "Components which help with redstone engineering",
  "create_brass_coated.ponder.tag.contraption_assembly": "Block Attachment Utility",
  "create_brass_coated.ponder.tag.contraption_assembly.description": "Tools and Components used to assemble structures moved as an animated Contraption",
  "create_brass_coated.ponder.tag.fluids": "Fluid Manipulators",
  "create_brass_coated.ponder.tag.fluids.description": "Components which help relaying and making use of Fluids",
  "create_brass_coated.ponder.tag.decoration": "Aesthetics",
  "create_brass_coated.ponder.tag.decoration.description": "Components used mostly for decorative purposes",
  "create_brass_coated.ponder.tag.windmill_sails": "Sails for Windmill Bearings",
  "create_brass_coated.ponder.tag.windmill_sails.description": "Blocks that count towards the strength of a Windmill Contraption when assembled. Each of these have equal efficiency in doing so.",
  "create_brass_coated.ponder.tag.arm_targets": "Targets for Mechanical Arms",
  "create_brass_coated.ponder.tag.arm_targets.description": "Components which can be selected as inputs or outputs to the Mechanical Arm",
  "create_brass_coated.ponder.tag.kinetic_appliances": "Kinetic Appliances",
  "create_brass_coated.ponder.tag.kinetic_appliances.description": "Components which make use of Rotational Force",
  "create_brass_coated.ponder.tag.kinetic_sources": "Kinetic Sources",
  "create_brass_coated.ponder.tag.kinetic_sources.description": "Components which generate Rotational Force",
  "create_brass_coated.ponder.tag.movement_anchor": "Movement Anchors",
  "create_brass_coated.ponder.tag.movement_anchor.description": "Components which allow the creation of moving contraptions, animating an attached structure in a variety of ways",
  "create_brass_coated.ponder.tag.kinetic_relays": "Kinetic Blocks",
  "create_brass_coated.ponder.tag.kinetic_relays.description": "Components which help relaying Rotational Force elsewhere",
  "create_brass_coated.ponder.tag.contraption_actor": "Contraption Actors",
  "create_brass_coated.ponder.tag.contraption_actor.description": "Components which expose special behaviour when attached to a moving contraption",
  "create_brass_coated.ponder.tag.creative": "Creative Mode",
  "create_brass_coated.ponder.tag.creative.description": "Components not usually available for Survival Mode",
  "create_brass_coated.ponder.tag.display_sources": "Sources for Display Links",
  "create_brass_coated.ponder.tag.display_sources.description": "Components or Blocks which offer some data that can be read with a Display Link",
  "create_brass_coated.ponder.tag.logistics": "Item Transportation",
  "create_brass_coated.ponder.tag.logistics.description": "Components which help moving items around",
  "create_brass_coated.ponder.tag.display_targets": "Targets for Display Links",
  "create_brass_coated.ponder.tag.display_targets.description": "Components or Blocks which can process and display the data received from a Display Link",
  "create_brass_coated.ponder.tag.train_related": "Railway Equipment",
  "create_brass_coated.ponder.tag.train_related.description": "Components used in the construction or management of Train Contraptions",

  "create_brass_coated.ponder.analog_lever.header": "Controlling signals using the Analog Lever",
  "create_brass_coated.ponder.analog_lever.text_1": "Analog Levers make for a compact and precise source of redstone power",
  "create_brass_coated.ponder.analog_lever.text_2": "Right-click to increase its analog power output",
  "create_brass_coated.ponder.analog_lever.text_3": "Right-click while Sneaking to decrease the power output again",

  "create_brass_coated.ponder.andesite_tunnel.header": "Using Andesite Tunnels",
  "create_brass_coated.ponder.andesite_tunnel.text_1": "Andesite Tunnels can be used to cover up your belts",
  "create_brass_coated.ponder.andesite_tunnel.text_2": "Whenever an Andesite Tunnel has connections to the sides...",
  "create_brass_coated.ponder.andesite_tunnel.text_3": "...they will split exactly one item off of any passing stacks",
  "create_brass_coated.ponder.andesite_tunnel.text_4": "The remainder will continue on its path",

  "create_brass_coated.ponder.auto_schedule.header": "Stations & Scheduling",
  "create_brass_coated.ponder.auto_schedule.text_1": "Schedules can be used to provide drivers with a destination",
  "create_brass_coated.ponder.auto_schedule.text_2": "Comparators will receive a signal whenever a Train is present",
  "create_brass_coated.ponder.auto_schedule.text_3": "Mind that a Station can only be approached from the indicated direction",
  "create_brass_coated.ponder.auto_schedule.text_4": "Stations can also be used to assign new Schedules automatically",
  "create_brass_coated.ponder.auto_schedule.text_5": "The Schedule placed on a station will automatically copy itself to present trains",
  "create_brass_coated.ponder.auto_schedule.text_6": "As opposed to manual scheduling, drivers will not take the item with them",

  "create_brass_coated.ponder.basin.header": "Processing Items in the Basin",
  "create_brass_coated.ponder.basin.text_1": "A Basin can hold Items and Fluids for Processing",
  "create_brass_coated.ponder.basin.text_2": "After a processing step, basins try to output below to the side of them",
  "create_brass_coated.ponder.basin.text_3": "When a valid component is present, the Basin will show an output faucet",
  "create_brass_coated.ponder.basin.text_4": "A number of options are applicable here",
  "create_brass_coated.ponder.basin.text_5": "Outputs will be caught by the inventory below",
  "create_brass_coated.ponder.basin.text_6": "Without output faucet, the Basin will retain items created in its processing",
  "create_brass_coated.ponder.basin.text_7": "This can be useful if outputs should be re-used as ingredients",
  "create_brass_coated.ponder.basin.text_8": "Desired outputs will then have to be extracted from the basin",
  "create_brass_coated.ponder.basin.text_9": "A Filter might be necessary to avoid pulling out un-processed items",

  "create_brass_coated.ponder.bearing_modes.header": "Movement Modes of the Mechanical Bearing",
  "create_brass_coated.ponder.bearing_modes.text_1": "When Stopped, the Bearing will place the structure at the nearest grid-aligned Angle",
  "create_brass_coated.ponder.bearing_modes.text_2": "It can be configured never to revert to solid blocks, or only near the angle it started at",

  "create_brass_coated.ponder.belt_casing.header": "Encasing Belts",
  "create_brass_coated.ponder.belt_casing.text_1": "Brass or Andesite Casing can be used to decorate Mechanical Belts",
  "create_brass_coated.ponder.belt_casing.text_2": "A wrench can be used to remove the casing",

  "create_brass_coated.ponder.belt_connector.header": "Using Mechanical Belts",
  "create_brass_coated.ponder.belt_connector.text_1": "Right-Clicking two shafts with a belt item will connect them together",
  "create_brass_coated.ponder.belt_connector.text_2": "Accidental selections can be canceled with Right-Click while Sneaking",
  "create_brass_coated.ponder.belt_connector.text_3": "Additional Shafts can be added throughout the Belt",
  "create_brass_coated.ponder.belt_connector.text_4": "Shafts connected via Belts will rotate with Identical Speed and Direction",
  "create_brass_coated.ponder.belt_connector.text_5": "Added shafts can be removed using the wrench",
  "create_brass_coated.ponder.belt_connector.text_6": "Mechanical Belts can be dyed for aesthetic purposes",

  "create_brass_coated.ponder.belt_directions.header": "Valid Orientations for Mechanical Belts",
  "create_brass_coated.ponder.belt_directions.text_1": "Belts cannot connect in arbitrary directions",
  "create_brass_coated.ponder.belt_directions.text_2": "1. They can connect horizontally",
  "create_brass_coated.ponder.belt_directions.text_3": "2. They can connect diagonally",
  "create_brass_coated.ponder.belt_directions.text_4": "3. They can connect vertically",
  "create_brass_coated.ponder.belt_directions.text_5": "4. And they can connect vertical shafts horizontally",
  "create_brass_coated.ponder.belt_directions.text_6": "These are all possible directions. Belts can span any Length between 2 and 20 blocks",

  "create_brass_coated.ponder.belt_transport.header": "Using Mechanical Belts for Logistics",
  "create_brass_coated.ponder.belt_transport.text_1": "Moving belts will transport Items and other Entities",
  "create_brass_coated.ponder.belt_transport.text_2": "Right-Click with an empty hand to take items off a belt",

  "create_brass_coated.ponder.blaze_burner.header": "Feeding Blaze Burners",
  "create_brass_coated.ponder.blaze_burner.text_1": "Blaze Burners can provide Heat to Items processed in a Basin",
  "create_brass_coated.ponder.blaze_burner.text_2": "For this, the Blaze has to be fed with flammable items",
  "create_brass_coated.ponder.blaze_burner.text_3": "With a Blaze Cake, the Burner can reach an even stronger level of heat",
  "create_brass_coated.ponder.blaze_burner.text_4": "The feeding process can be automated using Deployers or Mechanical Arms",

  "create_brass_coated.ponder.brass_funnel.header": "The Brass Funnel",
  "create_brass_coated.ponder.brass_funnel.text_1": "Andesite Funnels can only ever extract single items.",
  "create_brass_coated.ponder.brass_funnel.text_2": "Brass Funnels can extract up to a full stack.",
  "create_brass_coated.ponder.brass_funnel.text_3": "Scrolling on the filter slot allows for precise control over the extracted stack size.",
  "create_brass_coated.ponder.brass_funnel.text_4": "Using items on the filter slot will restrict the funnel to only transfer matching stacks.",

  "create_brass_coated.ponder.brass_tunnel.header": "Using Brass Tunnels",
  "create_brass_coated.ponder.brass_tunnel.text_1": "Brass Tunnels can be used to cover up your belts",
  "create_brass_coated.ponder.brass_tunnel.text_2": "Brass Tunnels have filter slots on each open side",
  "create_brass_coated.ponder.brass_tunnel.text_3": "Filters on inbound connections simply block non-matching items",
  "create_brass_coated.ponder.brass_tunnel.text_4": "Filters on outbound connections can be used to sort items by type",
  "create_brass_coated.ponder.brass_tunnel.text_5": "Whenever a passing item has multiple valid exits, the distribution mode will decide how to handle it",
  "create_brass_coated.ponder.brass_tunnel.text_6": "Brass Tunnels on parallel belts will form a group",
  "create_brass_coated.ponder.brass_tunnel.text_7": "Incoming Items will now be distributed across all connected exits",
  "create_brass_coated.ponder.brass_tunnel.text_8": "For this, items can also be inserted into the Tunnel block directly",

  "create_brass_coated.ponder.brass_tunnel_modes.header": "Distribution Modes of the Brass Tunnel",
  "create_brass_coated.ponder.brass_tunnel_modes.text_1": "Using a Wrench, the distribution behaviour of Brass Tunnels can be configured",
  "create_brass_coated.ponder.brass_tunnel_modes.text_10": "'Synchronize Inputs' is a unique setting for Brass Tunnels",
  "create_brass_coated.ponder.brass_tunnel_modes.text_11": "Items are only allowed past if every tunnel in the group has one waiting",
  "create_brass_coated.ponder.brass_tunnel_modes.text_12": "This ensures that all affected belts supply items at the same rate",
  "create_brass_coated.ponder.brass_tunnel_modes.text_2": "'Split' will attempt to distribute the stack evenly between available outputs",
  "create_brass_coated.ponder.brass_tunnel_modes.text_3": "If an output is unable to take more items, it will be skipped",
  "create_brass_coated.ponder.brass_tunnel_modes.text_4": "'Forced Split' will never skip outputs, and instead wait until they are free",
  "create_brass_coated.ponder.brass_tunnel_modes.text_5": "'Round Robin' keeps stacks whole, and cycles through outputs iteratively",
  "create_brass_coated.ponder.brass_tunnel_modes.text_6": "Once Again, if an output is unable to take more items, it will be skipped",
  "create_brass_coated.ponder.brass_tunnel_modes.text_7": "'Forced Round Robin' never skips outputs",
  "create_brass_coated.ponder.brass_tunnel_modes.text_8": "'Prefer Nearest' prioritizes the outputs closest to the items' input location",
  "create_brass_coated.ponder.brass_tunnel_modes.text_9": "'Randomize' will distribute whole stacks to randomly picked outputs",

  "create_brass_coated.ponder.cart_assembler.header": "Moving Structures using Cart Assemblers",
  "create_brass_coated.ponder.cart_assembler.text_1": "Powered Cart Assemblers mount attached structures to passing Minecarts",
  "create_brass_coated.ponder.cart_assembler.text_2": "Without a redstone signal, it disassembles passing cart contraptions back into blocks",
  "create_brass_coated.ponder.cart_assembler.text_3": "Using a Wrench on the Minecart will let you carry the Contraption elsewhere",

  "create_brass_coated.ponder.cart_assembler_dual.header": "Assembling Carriage Contraptions",
  "create_brass_coated.ponder.cart_assembler_dual.text_1": "Whenever two Cart Assembers share an attached structure...",
  "create_brass_coated.ponder.cart_assembler_dual.text_2": "Powering either of them will create a Carriage Contraption",
  "create_brass_coated.ponder.cart_assembler_dual.text_3": "The carts will behave like those connected via Minecart Coupling",

  "create_brass_coated.ponder.cart_assembler_modes.header": "Orientation Settings for Minecart Contraptions",
  "create_brass_coated.ponder.cart_assembler_modes.text_1": "Cart Contraptions will rotate to face towards their carts' motion",
  "create_brass_coated.ponder.cart_assembler_modes.text_2": "This Arrow indicates which side of the Structure will be considered the front",
  "create_brass_coated.ponder.cart_assembler_modes.text_3": "If the Assembler is set to Lock Rotation, the contraptions' orientation will never change",

  "create_brass_coated.ponder.cart_assembler_rails.header": "Other types of Minecarts and Rails",
  "create_brass_coated.ponder.cart_assembler_rails.text_1": "Cart Assemblers on Regular Tracks will not affect the passing carts' motion",
  "create_brass_coated.ponder.cart_assembler_rails.text_2": "When on Powered or Controller Rail, the carts will be held in place until it's Powered",
  "create_brass_coated.ponder.cart_assembler_rails.text_3": "Other types of Minecarts can be used as the anchor",
  "create_brass_coated.ponder.cart_assembler_rails.text_4": "Furnace Carts will keep themselves powered, pulling fuel from any attached inventories",

  "create_brass_coated.ponder.chain_drive.header": "Relaying rotational force with Chain Drives",
  "create_brass_coated.ponder.chain_drive.text_1": "Chain Drives relay rotation to each other in a row",
  "create_brass_coated.ponder.chain_drive.text_2": "All shafts connected like this will rotate in the same direction",
  "create_brass_coated.ponder.chain_drive.text_3": "Any part of the row can be rotated by 90 degrees",

  "create_brass_coated.ponder.chain_gearshift.header": "Controlling rotational speed with Chain Gearshifts",
  "create_brass_coated.ponder.chain_gearshift.text_1": "Unpowered Chain Gearshifts behave exactly like Chain Drives",
  "create_brass_coated.ponder.chain_gearshift.text_2": "When Powered, the speed transmitted to other Chain Drives in the row is doubled",
  "create_brass_coated.ponder.chain_gearshift.text_3": "Whenever the Powered Gearshift is not at the source, its speed will be halved instead",
  "create_brass_coated.ponder.chain_gearshift.text_4": "In both cases, Chain Drives in the row always run at 2x the speed of the Powered Gearshift",
  "create_brass_coated.ponder.chain_gearshift.text_5": "Using analog signals, the ratio can be adjusted more precisely between 1 and 2",
  "create_brass_coated.ponder.chain_gearshift.text_6": "12 RPM",

  "create_brass_coated.ponder.chute.header": "Transporting Items downward via Chutes",
  "create_brass_coated.ponder.chute.text_1": "Chutes can transport items vertically from and to inventories",
  "create_brass_coated.ponder.chute.text_2": "Using the Wrench, a window can be created",
  "create_brass_coated.ponder.chute.text_3": "Placing chutes targeting the side faces of another will make it diagonal",

  "create_brass_coated.ponder.chute_upward.header": "Transporting Items upward via Chutes",
  "create_brass_coated.ponder.chute_upward.text_1": "Using Encased Fans at the top or bottom, a Chute can move items upward",
  "create_brass_coated.ponder.chute_upward.text_2": "Inspecting chutes with Engineers' Goggles reveals information about the movement direction",
  "create_brass_coated.ponder.chute_upward.text_3": "On the 'blocked' end, items will have to be inserted/taken from the sides",

  "create_brass_coated.ponder.clockwork_bearing.header": "Animating Structures using Clockwork Bearings",
  "create_brass_coated.ponder.clockwork_bearing.text_1": "Clockwork Bearings attach to blocks in front of them",
  "create_brass_coated.ponder.clockwork_bearing.text_2": "Upon receiving Rotational Force, the structure will be rotated according to the hour of the day",
  "create_brass_coated.ponder.clockwork_bearing.text_3": "3:00",
  "create_brass_coated.ponder.clockwork_bearing.text_4": "4:00",
  "create_brass_coated.ponder.clockwork_bearing.text_5": "Right-Click the bearing to start or stop animating the structure",
  "create_brass_coated.ponder.clockwork_bearing.text_6": "In front of the Hour Hand, a second structure can be added",
  "create_brass_coated.ponder.clockwork_bearing.text_7": "Ensure that the two Structures are not glued to each other",
  "create_brass_coated.ponder.clockwork_bearing.text_8": "The Second Structure will now rotate as the Minute Hand",

  "create_brass_coated.ponder.clutch.header": "Controlling rotational force using a Clutch",
  "create_brass_coated.ponder.clutch.text_1": "Clutches will relay rotation in a straight line",
  "create_brass_coated.ponder.clutch.text_2": "When powered by Redstone, it breaks the connection",

  "create_brass_coated.ponder.cog_speedup.header": "Gearshifting with Cogs",
  "create_brass_coated.ponder.cog_speedup.text_1": "Large and Small cogs can be connected diagonally",
  "create_brass_coated.ponder.cog_speedup.text_2": "Shifting from large to small cogs, the conveyed speed will be doubled",
  "create_brass_coated.ponder.cog_speedup.text_3": "Shifting the opposite way, the conveyed speed will be halved",

  "create_brass_coated.ponder.cogwheel.header": "Relaying rotational force using Cogwheels",
  "create_brass_coated.ponder.cogwheel.text_1": "Cogwheels will relay rotation to other adjacent cogwheels",
  "create_brass_coated.ponder.cogwheel.text_2": "Neighbouring shafts connected like this will rotate in opposite directions",

  "create_brass_coated.ponder.cogwheel_casing.header": "Encasing Cogwheels",
  "create_brass_coated.ponder.cogwheel_casing.text_1": "Brass or Andesite Casing can be used to decorate Cogwheels",
  "create_brass_coated.ponder.cogwheel_casing.text_2": "Components added after encasing will not connect to the shaft outputs",
  "create_brass_coated.ponder.cogwheel_casing.text_3": "The Wrench can be used to toggle connections",

  "create_brass_coated.ponder.creative_fluid_tank.header": "Creative Fluid Tanks",
  "create_brass_coated.ponder.creative_fluid_tank.text_1": "Creative Fluid Tanks can be used to provide a bottomless supply of fluid",
  "create_brass_coated.ponder.creative_fluid_tank.text_2": "Right-Click with a fluid containing item to configure it",
  "create_brass_coated.ponder.creative_fluid_tank.text_3": "Pipe Networks can now endlessly draw the assigned fluid from the tank",
  "create_brass_coated.ponder.creative_fluid_tank.text_4": "Any Fluids pushed back into a Creative Fluid Tank will be voided",

  "create_brass_coated.ponder.creative_motor.header": "Generating Rotational Force using Creative Motors",
  "create_brass_coated.ponder.creative_motor.text_1": "Creative motors are a compact and configurable source of Rotational Force",
  "create_brass_coated.ponder.creative_motor.text_2": "Scrolling on the back panel changes the RPM of the motors' rotational output",

  "create_brass_coated.ponder.creative_motor_mojang.header": "Mojang's Enigma",

  "create_brass_coated.ponder.crushing_wheels.header": "Processing Items with Crushing Wheels",
  "create_brass_coated.ponder.crushing_wheels.text_1": "A pair of Crushing Wheels can grind items very effectively",
  "create_brass_coated.ponder.crushing_wheels.text_2": "Their Rotational Input has to make them spin into each other",
  "create_brass_coated.ponder.crushing_wheels.text_3": "Items thrown or inserted into the top will get processed",
  "create_brass_coated.ponder.crushing_wheels.text_4": "Items can be inserted and picked up through automated means as well",

  "create_brass_coated.ponder.deployer.header": "Using the Deployer",
  "create_brass_coated.ponder.deployer.text_1": "Given Rotational Force, a Deployer can imitate player interactions",
  "create_brass_coated.ponder.deployer.text_10": "Right-click the front to give it an Item to use",
  "create_brass_coated.ponder.deployer.text_11": "Items can also be inserted automatically",
  "create_brass_coated.ponder.deployer.text_12": "Deployers carry a filter slot",
  "create_brass_coated.ponder.deployer.text_13": "When a filter is set, it activates only while holding a matching item",
  "create_brass_coated.ponder.deployer.text_14": "Only items matching the filter can now be inserted...",
  "create_brass_coated.ponder.deployer.text_15": "...and only non-matching items will be extracted",
  "create_brass_coated.ponder.deployer.text_2": "It will always interact with the position 2 blocks in front of itself",
  "create_brass_coated.ponder.deployer.text_3": "Blocks directly in front will not obstruct it",
  "create_brass_coated.ponder.deployer.text_4": "Deployers can:",
  "create_brass_coated.ponder.deployer.text_5": "Place Blocks,",
  "create_brass_coated.ponder.deployer.text_6": "Use Items,",
  "create_brass_coated.ponder.deployer.text_7": "Activate Blocks,",
  "create_brass_coated.ponder.deployer.text_8": "Harvest blocks",
  "create_brass_coated.ponder.deployer.text_9": "and Attack Mobs",

  "create_brass_coated.ponder.deployer_contraption.header": "Using Deployers on Contraptions",
  "create_brass_coated.ponder.deployer_contraption.text_1": "Whenever Deployers are moved as part of an animated Contraption...",
  "create_brass_coated.ponder.deployer_contraption.text_2": "They activate at each visited location, using items from inventories anywhere on the contraption",
  "create_brass_coated.ponder.deployer_contraption.text_3": "The Filter slot can be used to specify which items to pull",

  "create_brass_coated.ponder.deployer_modes.header": "Modes of the Deployer",
  "create_brass_coated.ponder.deployer_modes.text_1": "By default, a Deployer imitates a Right-click interaction",
  "create_brass_coated.ponder.deployer_modes.text_2": "Using a Wrench, it can be set to imitate a Left-click instead",

  "create_brass_coated.ponder.deployer_processing.header": "Processing Items using Deployers",
  "create_brass_coated.ponder.deployer_processing.text_1": "With a fitting held item, Deployers can process items provided beneath them",
  "create_brass_coated.ponder.deployer_processing.text_2": "The Input items can be dropped or placed on a Depot under the Deployer",
  "create_brass_coated.ponder.deployer_processing.text_3": "When items are provided on a belt...",
  "create_brass_coated.ponder.deployer_processing.text_4": "The Deployer will hold and process them automatically",

  "create_brass_coated.ponder.deployer_redstone.header": "Controlling Deployers with Redstone",
  "create_brass_coated.ponder.deployer_redstone.text_1": "When powered by Redstone, Deployers will not activate",
  "create_brass_coated.ponder.deployer_redstone.text_2": "Before stopping, the Deployer will finish any started cycles",
  "create_brass_coated.ponder.deployer_redstone.text_3": "Thus, a negative pulse can be used to trigger exactly one activation cycle",

  "create_brass_coated.ponder.depot.header": "Using Depots",
  "create_brass_coated.ponder.depot.text_1": "Depots can serve as 'stationary' belt elements",
  "create_brass_coated.ponder.depot.text_2": "Right-Click to manually place or remove Items from it",
  "create_brass_coated.ponder.depot.text_3": "Just like Mechanical Belts, it can provide items to processing",
  "create_brass_coated.ponder.depot.text_4": "...as well as provide Items to Mechanical Arms",

  "create_brass_coated.ponder.display_board.header": "Using Display Boards",
  "create_brass_coated.ponder.display_board.text_1": "Display Boards are a scalable alternative to the sign",
  "create_brass_coated.ponder.display_board.text_2": "They require Rotational Force to operate",
  "create_brass_coated.ponder.display_board.text_3": "Text can be displayed using Name Tags...",
  "create_brass_coated.ponder.display_board.text_4": "...or through the use of Display Links",
  "create_brass_coated.ponder.display_board.text_5": "Dyes can be applied to individual lines of the board",
  "create_brass_coated.ponder.display_board.text_6": "Lines can be reset by clicking them with an empty hand",

  "create_brass_coated.ponder.display_link.header": "Setting up Display Links",
  "create_brass_coated.ponder.display_link.text_1": "Display Links can be used to visualise dynamic information",
  "create_brass_coated.ponder.display_link.text_2": "First, right-click the target display...",
  "create_brass_coated.ponder.display_link.text_3": "...then attach it to the block to read from",
  "create_brass_coated.ponder.display_link.text_4": "Open the Interface to select and configure what is sent",
  "create_brass_coated.ponder.display_link.text_5": "The display will now receive information from the link",
  "create_brass_coated.ponder.display_link.text_6": "Not every block can act as a source",
  "create_brass_coated.ponder.display_link.text_7": "Each compatible block provides unique information",
  "create_brass_coated.ponder.display_link.text_8": "The Display Link can work with several different displays",

  "create_brass_coated.ponder.display_link_redstone.header": "Redstone Control",
  "create_brass_coated.ponder.display_link_redstone.text_1": "When powered by Redstone, Display Links stop sending updates",
  "create_brass_coated.ponder.display_link_redstone.text_2": "Once unpowered, the Timer is reset and new info is sent immediately",
  "create_brass_coated.ponder.display_link_redstone.text_3": "Signals emitted from the source do not affect the Link",

  "create_brass_coated.ponder.empty_blaze_burner.header": "Using Empty Blaze Burners",
  "create_brass_coated.ponder.empty_blaze_burner.text_1": "Right-click a Blaze with the empty burner to capture it",
  "create_brass_coated.ponder.empty_blaze_burner.text_2": "Alternatively, Blazes can be collected from their Spawners directly",
  "create_brass_coated.ponder.empty_blaze_burner.text_3": "You now have an ideal heat source for various machines",
  "create_brass_coated.ponder.empty_blaze_burner.text_4": "For Aesthetic purposes, Empty Blaze Burners can also be lit using Flint and Steel",
  "create_brass_coated.ponder.empty_blaze_burner.text_5": "The flame can be transformed using a soul-infused item",
  "create_brass_coated.ponder.empty_blaze_burner.text_6": "However, without a blaze they are not suitable for industrial heating",

  "create_brass_coated.ponder.encased_fluid_pipe.header": "Encasing Fluid Pipes",
  "create_brass_coated.ponder.encased_fluid_pipe.text_1": "Copper Casing can be used to decorate Fluid Pipes",
  "create_brass_coated.ponder.encased_fluid_pipe.text_2": "Aside from being conceiled, Encased Pipes are locked into their connectivity state",
  "create_brass_coated.ponder.encased_fluid_pipe.text_3": "It will no longer react to any neighbouring blocks being added or removed",

  "create_brass_coated.ponder.fan_direction.header": "Air flow of Encased Fans",
  "create_brass_coated.ponder.fan_direction.text_1": "Encased Fans use Rotational Force to create an Air Current",
  "create_brass_coated.ponder.fan_direction.text_2": "Strength and Direction of Flow depends on the Rotational Input",

  "create_brass_coated.ponder.fan_processing.header": "Processing Items using Encased Fans",
  "create_brass_coated.ponder.fan_processing.text_1": "When passing through lava, the Air Flow becomes Heated",
  "create_brass_coated.ponder.fan_processing.text_2": "Items caught in the area will be smelted",
  "create_brass_coated.ponder.fan_processing.text_3": "Food items thrown here would be incinerated",
  "create_brass_coated.ponder.fan_processing.text_4": "Instead, a setup for Smoking using Fire should be used for them",
  "create_brass_coated.ponder.fan_processing.text_5": "Air Flows passing through water create a Washing Setup",
  "create_brass_coated.ponder.fan_processing.text_6": "Some interesting new processing can be done with it",
  "create_brass_coated.ponder.fan_processing.text_7": "The Speed of the Fan does NOT affect the processing speed, only its range",
  "create_brass_coated.ponder.fan_processing.text_8": "Fan Processing can also be applied to Items on Depots and Belts",

  "create_brass_coated.ponder.fluid_pipe_flow.header": "Moving Fluids using Copper Pipes",
  "create_brass_coated.ponder.fluid_pipe_flow.text_1": "Fluid Pipes can connect two or more fluid sources and targets",
  "create_brass_coated.ponder.fluid_pipe_flow.text_2": "Using a wrench, a straight pipe segment can be given a window",
  "create_brass_coated.ponder.fluid_pipe_flow.text_3": "Windowed pipes will not connect to any other adjacent pipe segments",
  "create_brass_coated.ponder.fluid_pipe_flow.text_4": "Powered by Mechanical Pumps, the Pipes can transport Fluids",
  "create_brass_coated.ponder.fluid_pipe_flow.text_5": "No fluid is being extracted at first",
  "create_brass_coated.ponder.fluid_pipe_flow.text_6": "Once the flow connects them, the endpoints gradually transfer their contents",
  "create_brass_coated.ponder.fluid_pipe_flow.text_7": "Thus, the Pipe blocks themselves never 'physically' contain any fluid",

  "create_brass_coated.ponder.fluid_pipe_interaction.header": "Draining and Filling fluid containers",
  "create_brass_coated.ponder.fluid_pipe_interaction.text_1": "Endpoints of a pipe network can interact with a variety of blocks",
  "create_brass_coated.ponder.fluid_pipe_interaction.text_2": "Any block with fluid storage capabilities can be filled or drained",
  "create_brass_coated.ponder.fluid_pipe_interaction.text_3": "Source blocks right in front of an open end can be picked up...",
  "create_brass_coated.ponder.fluid_pipe_interaction.text_4": "...while spilling into empty spaces can create fluid sources",
  "create_brass_coated.ponder.fluid_pipe_interaction.text_5": "Pipes can also extract fluids from a handful of other blocks directly",

  "create_brass_coated.ponder.fluid_tank_sizes.header": "Dimensions of a Fluid tank",
  "create_brass_coated.ponder.fluid_tank_sizes.text_1": "Fluid Tanks can be combined to increase the total capacity",
  "create_brass_coated.ponder.fluid_tank_sizes.text_2": "Their base square can be up to 3 blocks wide...",
  "create_brass_coated.ponder.fluid_tank_sizes.text_3": "...and grow in height by more than 30 additional layers",
  "create_brass_coated.ponder.fluid_tank_sizes.text_4": "Using a Wrench, a tanks' window can be toggled",

  "create_brass_coated.ponder.fluid_tank_storage.header": "Storing Fluids in Fluid Tanks",
  "create_brass_coated.ponder.fluid_tank_storage.text_1": "Fluid Tanks can be used to store large amounts of fluid",
  "create_brass_coated.ponder.fluid_tank_storage.text_2": "Pipe networks can push and pull fluids from any side",
  "create_brass_coated.ponder.fluid_tank_storage.text_3": "The contained fluid can be measured by a Comparator",
  "create_brass_coated.ponder.fluid_tank_storage.text_4": "However, in Survival Mode Fluids cannot be added or taken manually",
  "create_brass_coated.ponder.fluid_tank_storage.text_5": "You can use Basins, Item Drains and Spouts to drain or fill fluid containing items",

  "create_brass_coated.ponder.funnel_compat.header": "Funnel compatibility",
  "create_brass_coated.ponder.funnel_compat.text_1": "Funnels should also interact nicely with a handful of other components.",
  "create_brass_coated.ponder.funnel_compat.text_2": "Vertical Saws",
  "create_brass_coated.ponder.funnel_compat.text_3": "Depots",
  "create_brass_coated.ponder.funnel_compat.text_4": "Item Drains",

  "create_brass_coated.ponder.funnel_direction.header": "Direction of Transfer",
  "create_brass_coated.ponder.funnel_direction.text_1": "Placed normally, it pulls items from the inventory.",
  "create_brass_coated.ponder.funnel_direction.text_2": "Placed while sneaking, it puts items into the inventory.",
  "create_brass_coated.ponder.funnel_direction.text_3": "Using a wrench, the funnel can be flipped after placement.",
  "create_brass_coated.ponder.funnel_direction.text_4": "Same rules will apply for most orientations.",
  "create_brass_coated.ponder.funnel_direction.text_5": "Funnels on belts will extract/insert depending on its movement direction.",

  "create_brass_coated.ponder.funnel_intro.header": "Using funnels",
  "create_brass_coated.ponder.funnel_intro.text_1": "Funnels are ideal for transferring items from and to inventories.",

  "create_brass_coated.ponder.funnel_redstone.header": "Redstone control",
  "create_brass_coated.ponder.funnel_redstone.text_1": "Redstone power will prevent any funnel from acting",

  "create_brass_coated.ponder.funnel_transfer.header": "Direct transfer",
  "create_brass_coated.ponder.funnel_transfer.text_1": "Funnels cannot ever transfer between closed inventories directly.",
  "create_brass_coated.ponder.funnel_transfer.text_2": "Chutes or Smart chutes might be more suitable for such purposes.",
  "create_brass_coated.ponder.funnel_transfer.text_3": "Same applies for horizontal movement. A mechanical belt should help here.",

  "create_brass_coated.ponder.gantry_carriage.header": "Using Gantry Carriages",
  "create_brass_coated.ponder.gantry_carriage.text_1": "Gantry Carriages can mount to and slide along a Gantry Shaft.",
  "create_brass_coated.ponder.gantry_carriage.text_2": "Gantry setups can move attached Blocks.",

  "create_brass_coated.ponder.gantry_cascaded.header": "Cascaded Gantries",
  "create_brass_coated.ponder.gantry_cascaded.text_1": "Gantry shafts attach to a carriage without the need of super glue",
  "create_brass_coated.ponder.gantry_cascaded.text_2": "Same applies for carriages on moved Gantry Shafts",
  "create_brass_coated.ponder.gantry_cascaded.text_3": "Thus, a gantry system can be cascaded to cover multiple axes of movement",

  "create_brass_coated.ponder.gantry_direction.header": "Gantry Movement Direction",
  "create_brass_coated.ponder.gantry_direction.text_1": "Gantry Shafts can have opposite orientations",
  "create_brass_coated.ponder.gantry_direction.text_2": "The movement direction of carriages depend on their shafts' orientation",
  "create_brass_coated.ponder.gantry_direction.text_3": "...as well as the rotation direction of the shaft",
  "create_brass_coated.ponder.gantry_direction.text_4": "Same rules apply for the propagated rotation",

  "create_brass_coated.ponder.gantry_redstone.header": "Gantry Power Propagation",
  "create_brass_coated.ponder.gantry_redstone.text_1": "Redstone-powered gantry shafts stop moving their carriages",
  "create_brass_coated.ponder.gantry_redstone.text_2": "Instead, its rotational force is relayed to the carriages' output shaft",

  "create_brass_coated.ponder.gantry_shaft.header": "Using Gantry Shafts",
  "create_brass_coated.ponder.gantry_shaft.text_1": "Gantry Shafts form the basis of a gantry setup. Attached Carriages will move along them.",
  "create_brass_coated.ponder.gantry_shaft.text_2": "Gantry setups can move attached Blocks.",

  "create_brass_coated.ponder.gearbox.header": "Relaying rotational force using Gearboxes",
  "create_brass_coated.ponder.gearbox.text_1": "Jumping between axes of rotation can get bulky quickly",
  "create_brass_coated.ponder.gearbox.text_2": "A gearbox is the more compact equivalent of this setup",
  "create_brass_coated.ponder.gearbox.text_3": "Shafts around corners rotate in mirrored directions",
  "create_brass_coated.ponder.gearbox.text_4": "Straight connections will be reversed",

  "create_brass_coated.ponder.gearshift.header": "Controlling rotational force using a Gearshift",
  "create_brass_coated.ponder.gearshift.text_1": "Gearshifts will relay rotation in a straight line",
  "create_brass_coated.ponder.gearshift.text_2": "When powered by Redstone, it reverses the transmission",

  "create_brass_coated.ponder.hand_crank.header": "Generating Rotational Force using Hand Cranks",
  "create_brass_coated.ponder.hand_crank.text_1": "Hand Cranks can be used by players to apply rotational force manually",
  "create_brass_coated.ponder.hand_crank.text_2": "Hold Right-Click to rotate it Counter-Clockwise",
  "create_brass_coated.ponder.hand_crank.text_3": "Its conveyed speed is relatively high",
  "create_brass_coated.ponder.hand_crank.text_4": "Sneak and Hold Right-Click to rotate it Clockwise",

  "create_brass_coated.ponder.hose_pulley.header": "Source Filling and Draining using Hose Pulleys",
  "create_brass_coated.ponder.hose_pulley.text_1": "Hose Pulleys can be used to fill or drain large bodies of Fluid",
  "create_brass_coated.ponder.hose_pulley.text_2": "With the Kinetic Input, the height of the pulleys' hose can be controlled",
  "create_brass_coated.ponder.hose_pulley.text_3": "The Pulley retracts while the input rotation is inverted",
  "create_brass_coated.ponder.hose_pulley.text_4": "On the opposite side, pipes can be connected",
  "create_brass_coated.ponder.hose_pulley.text_5": "Attached pipe networks can either provide fluid to the hose...",
  "create_brass_coated.ponder.hose_pulley.text_6": "...or pull from it, draining the pool instead",
  "create_brass_coated.ponder.hose_pulley.text_7": "Fill and Drain speed of the pulley depends entirely on the fluid networks' throughput",

  "create_brass_coated.ponder.hose_pulley_infinite.header": "Passively Filling and Draining large bodies of Fluid",
  "create_brass_coated.ponder.hose_pulley_infinite.text_1": "When deploying the Hose Pulley into a large enough ocean...",
  "create_brass_coated.ponder.hose_pulley_infinite.text_2": "It will provide/dispose fluids without affecting the source",
  "create_brass_coated.ponder.hose_pulley_infinite.text_3": "Pipe networks can limitlessly take fluids from/to such pulleys",

  "create_brass_coated.ponder.hose_pulley_level.header": "Fill and Drain level of Hose Pulleys",
  "create_brass_coated.ponder.hose_pulley_level.text_1": "While fully retracted, the Hose Pulley cannot operate",
  "create_brass_coated.ponder.hose_pulley_level.text_2": "Draining runs from top to bottom",
  "create_brass_coated.ponder.hose_pulley_level.text_3": "The surface level will end up just below where the hose ends",
  "create_brass_coated.ponder.hose_pulley_level.text_4": "Filling runs from bottom to top",
  "create_brass_coated.ponder.hose_pulley_level.text_5": "The filled pool will not grow beyond the layer above the hose end",

  "create_brass_coated.ponder.item_drain.header": "Emptying Fluid Containers using Item Drains",
  "create_brass_coated.ponder.item_drain.text_1": "Item Drains can extract fluids from items",
  "create_brass_coated.ponder.item_drain.text_2": "Right-click it to pour fluids from your held item into it",
  "create_brass_coated.ponder.item_drain.text_3": "When items are inserted from the side...",
  "create_brass_coated.ponder.item_drain.text_4": "...they roll across, emptying out their contained fluid",
  "create_brass_coated.ponder.item_drain.text_5": "Pipe Networks can now pull the fluid from the drains' internal buffer",

  "create_brass_coated.ponder.item_vault_sizes.header": "Dimensions of an Item Vault",
  "create_brass_coated.ponder.item_vault_sizes.text_1": "Item Vaults can be combined to increase the total capacity",
  "create_brass_coated.ponder.item_vault_sizes.text_2": "Their base square can be up to 3 blocks wide...",
  "create_brass_coated.ponder.item_vault_sizes.text_3": "...and grow in length up to 3x their diameter",

  "create_brass_coated.ponder.item_vault_storage.header": "Storing Items in Vaults",
  "create_brass_coated.ponder.item_vault_storage.text_1": "Item Vaults can be used to store large amounts of items",
  "create_brass_coated.ponder.item_vault_storage.text_2": "However, contents cannot be added or taken manually",
  "create_brass_coated.ponder.item_vault_storage.text_3": "Any components for item transfer can both insert...",
  "create_brass_coated.ponder.item_vault_storage.text_4": "...and take contents from this container",

  "create_brass_coated.ponder.large_cogwheel.header": "Relaying rotational force using Large Cogwheels",
  "create_brass_coated.ponder.large_cogwheel.text_1": "Large cogwheels can connect to each other at right angles",
  "create_brass_coated.ponder.large_cogwheel.text_2": "It will help relaying conveyed speed to other axes of rotation",

  "create_brass_coated.ponder.linear_chassis_attachment.header": "Attaching blocks using Linear Chassis",
  "create_brass_coated.ponder.linear_chassis_attachment.text_1": "The open faces of a Linear Chassis can be made Sticky",
  "create_brass_coated.ponder.linear_chassis_attachment.text_2": "Click again to make the opposite side sticky",
  "create_brass_coated.ponder.linear_chassis_attachment.text_3": "Sneak and Right-Click with an empty hand to remove the slime",
  "create_brass_coated.ponder.linear_chassis_attachment.text_4": "Stickied faces of the Linear Chassis will attach a line of blocks in front of it",
  "create_brass_coated.ponder.linear_chassis_attachment.text_5": "Using a Wrench, a precise Range can be specified for this chassis",
  "create_brass_coated.ponder.linear_chassis_attachment.text_6": "Holding CTRL and scrolling adjusts the range of all attached Chassis Blocks",
  "create_brass_coated.ponder.linear_chassis_attachment.text_7": "Attaching blocks to any other side requires the use of Super Glue",
  "create_brass_coated.ponder.linear_chassis_attachment.text_8": "Using these mechanics, structures of any shape can move as a Contraption",

  "create_brass_coated.ponder.linear_chassis_group.header": "Moving Linear Chassis in groups",
  "create_brass_coated.ponder.linear_chassis_group.text_1": "Linear Chassis connect to identical Chassis blocks next to them",
  "create_brass_coated.ponder.linear_chassis_group.text_2": "When one is moved by a Contraption, the others are dragged with it",
  "create_brass_coated.ponder.linear_chassis_group.text_3": "Chassis of a different type or facing another direction will not attach",

  "create_brass_coated.ponder.mechanical_arm.header": "Setting up Mechanical Arms",
  "create_brass_coated.ponder.mechanical_arm.text_1": "Mechanical Arms have to be assigned their in- and outputs before they are placed",
  "create_brass_coated.ponder.mechanical_arm.text_2": "Right-Click inventories while holding the Arm to assign them as Targets",
  "create_brass_coated.ponder.mechanical_arm.text_3": "Right-Click again to toggle between Input (Blue) and Output (Orange)",
  "create_brass_coated.ponder.mechanical_arm.text_4": "Left-Click components to remove their Selection",
  "create_brass_coated.ponder.mechanical_arm.text_5": "Once placed, the Mechanical Arm will target the blocks selected previously",
  "create_brass_coated.ponder.mechanical_arm.text_6": "They can have any amount of in- and outputs within their range",
  "create_brass_coated.ponder.mechanical_arm.text_7": "However, not every type of Inventory can be interacted with directly",
  "create_brass_coated.ponder.mechanical_arm.text_8": "Funnels and Depots can help to Bridge that gap",

  "create_brass_coated.ponder.mechanical_arm_filtering.header": "Filtering Outputs of the Mechanical Arm",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_1": "Inputs",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_2": "Outputs",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_3": "Sometimes it is desirable to restrict targets of the Arm by matching a filter",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_4": "Mechanical Arms by themselves do not provide any options for filtering",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_5": "Brass Funnels as Targets do however communicate their own filter to the Arm",
  "create_brass_coated.ponder.mechanical_arm_filtering.text_6": "The Arm is smart enough not to pick up items it couldn't distribute",

  "create_brass_coated.ponder.mechanical_arm_modes.header": "Distribution modes of the Mechanical Arm",
  "create_brass_coated.ponder.mechanical_arm_modes.text_1": "Input",
  "create_brass_coated.ponder.mechanical_arm_modes.text_2": "Outputs",
  "create_brass_coated.ponder.mechanical_arm_modes.text_3": "Whenever an Arm has to choose between multiple valid outputs...",
  "create_brass_coated.ponder.mechanical_arm_modes.text_4": "...it will act according to its setting",
  "create_brass_coated.ponder.mechanical_arm_modes.text_5": "Scrolling with a Wrench will allow you to configure it",
  "create_brass_coated.ponder.mechanical_arm_modes.text_6": "Round Robin mode simply cycles through all outputs that are available",
  "create_brass_coated.ponder.mechanical_arm_modes.text_7": "If an output is unable to take more items, it will be skipped",
  "create_brass_coated.ponder.mechanical_arm_modes.text_8": "Forced Round Robin mode will never skip outputs, and instead wait until they are free",
  "create_brass_coated.ponder.mechanical_arm_modes.text_9": "Prefer First prioritizes the outputs selected earliest when configuring this Arm",

  "create_brass_coated.ponder.mechanical_arm_redstone.header": "Controlling Mechanical Arms with Redstone",
  "create_brass_coated.ponder.mechanical_arm_redstone.text_1": "When powered by Redstone, Mechanical Arms will not activate",
  "create_brass_coated.ponder.mechanical_arm_redstone.text_2": "Before stopping, it will finish any started cycles",
  "create_brass_coated.ponder.mechanical_arm_redstone.text_3": "Thus, a negative pulse can be used to trigger exactly one activation cycle",

  "create_brass_coated.ponder.mechanical_bearing.header": "Movings Structures using the Mechanical Bearing",
  "create_brass_coated.ponder.mechanical_bearing.text_1": "Mechanical Bearings attach to the block in front of them",
  "create_brass_coated.ponder.mechanical_bearing.text_2": "Upon receiving Rotational Force, it will assemble it into a Rotating Contraption",

  "create_brass_coated.ponder.mechanical_crafter.header": "Setting up Mechanical Crafters",
  "create_brass_coated.ponder.mechanical_crafter.text_1": "An array of Mechanical Crafters can be used to automate any Crafting Recipe",
  "create_brass_coated.ponder.mechanical_crafter.text_2": "Using a Wrench, the Crafters' paths can be arranged",
  "create_brass_coated.ponder.mechanical_crafter.text_3": "For a valid setup, all paths have to converge into one exit at any side",
  "create_brass_coated.ponder.mechanical_crafter.text_4": "The outputs will be placed into the inventory at the exit",
  "create_brass_coated.ponder.mechanical_crafter.text_5": "Mechanical Crafters require Rotational Force to operate",
  "create_brass_coated.ponder.mechanical_crafter.text_6": "Right-Click the front to insert Items manually",
  "create_brass_coated.ponder.mechanical_crafter.text_7": "Once every slot of a path contains an Item, the crafting process will begin",
  "create_brass_coated.ponder.mechanical_crafter.text_8": "For recipes not fully occupying the crafter setup, the start can be forced using a Redstone Pulse",

  "create_brass_coated.ponder.mechanical_crafter_connect.header": "Connecting Inventories of Crafters",
  "create_brass_coated.ponder.mechanical_crafter_connect.text_1": "Items can be inserted to Crafters automatically",
  "create_brass_coated.ponder.mechanical_crafter_connect.text_2": "Using the Wrench at their backs, Mechanical Crafter inputs can be combined",
  "create_brass_coated.ponder.mechanical_crafter_connect.text_3": "All connected Crafters can now be accessed by the same input location",

  "create_brass_coated.ponder.mechanical_crafter_covers.header": "Covering slots of Mechanical Crafters",
  "create_brass_coated.ponder.mechanical_crafter_covers.text_1": "Some recipes will require additional Crafters to bridge gaps in the path",
  "create_brass_coated.ponder.mechanical_crafter_covers.text_2": "Using Slot Covers, Crafters can be set to act as an Empty Slot in the arrangement",
  "create_brass_coated.ponder.mechanical_crafter_covers.text_3": "Shared Inputs created with the Wrench at the back can also reach across covered Crafters",

  "create_brass_coated.ponder.mechanical_drill.header": "Breaking Blocks with the Mechanical Drill",
  "create_brass_coated.ponder.mechanical_drill.text_1": "When given Rotational Force, a Mechanical Drill will break blocks directly in front of it",
  "create_brass_coated.ponder.mechanical_drill.text_2": "Its mining speed depends on the Rotational Input",

  "create_brass_coated.ponder.mechanical_drill_contraption.header": "Using Mechanical Drills on Contraptions",
  "create_brass_coated.ponder.mechanical_drill_contraption.text_1": "Whenever Drills are moved as part of an animated Contraption...",
  "create_brass_coated.ponder.mechanical_drill_contraption.text_2": "...they will break blocks the contraption runs them into",

  "create_brass_coated.ponder.mechanical_harvester.header": "Using Mechanical Harvesters on Contraptions",
  "create_brass_coated.ponder.mechanical_harvester.text_1": "Whenever Harvesters are moved as part of an animated Contraption...",
  "create_brass_coated.ponder.mechanical_harvester.text_2": "They will harvest and reset any mature crops on their way",

  "create_brass_coated.ponder.mechanical_mixer.header": "Processing Items with the Mechanical Mixer",
  "create_brass_coated.ponder.mechanical_mixer.text_1": "With a Mixer and Basin, some Crafting Recipes can be automated",
  "create_brass_coated.ponder.mechanical_mixer.text_2": "Available recipes include any Shapeless Crafting Recipe, plus a couple extra ones",
  "create_brass_coated.ponder.mechanical_mixer.text_3": "Some of those recipes may require the heat of a Blaze Burner",
  "create_brass_coated.ponder.mechanical_mixer.text_4": "The filter slot can be used in case two recipes are conflicting.",

  "create_brass_coated.ponder.mechanical_piston.header": "Moving Structures using Mechanical Pistons",
  "create_brass_coated.ponder.mechanical_piston.text_1": "Mechanical Pistons can move blocks in front of them",
  "create_brass_coated.ponder.mechanical_piston.text_2": "Speed and direction of movement depend on the Rotational Input",
  "create_brass_coated.ponder.mechanical_piston.text_3": "Sticky Mechanical Pistons can pull the attached blocks back",

  "create_brass_coated.ponder.mechanical_piston_modes.header": "Movement Modes of the Mechanical Piston",
  "create_brass_coated.ponder.mechanical_piston_modes.text_1": "Whenever Pistons stop moving, the moved structure reverts to blocks",
  "create_brass_coated.ponder.mechanical_piston_modes.text_2": "It can be configured never to revert to solid blocks, or only at the location it started at",

  "create_brass_coated.ponder.mechanical_plough.header": "Using Mechanical Ploughs on Contraptions",
  "create_brass_coated.ponder.mechanical_plough.text_1": "Whenever Ploughs are moved as part of an animated Contraption...",
  "create_brass_coated.ponder.mechanical_plough.text_2": "...they will break blocks without a solid collision hitbox",
  "create_brass_coated.ponder.mechanical_plough.text_3": "Additionally, ploughs can create farmland",
  "create_brass_coated.ponder.mechanical_plough.text_4": "...they can also launch entities without hurting them",

  "create_brass_coated.ponder.mechanical_press.header": "Processing Items with the Mechanical Press",
  "create_brass_coated.ponder.mechanical_press.text_1": "The Mechanical Press can process items provided beneath it",
  "create_brass_coated.ponder.mechanical_press.text_2": "The Input items can be dropped or placed on a Depot under the Press",
  "create_brass_coated.ponder.mechanical_press.text_3": "When items are provided on a belt...",
  "create_brass_coated.ponder.mechanical_press.text_4": "The Press will hold and process them automatically",

  "create_brass_coated.ponder.mechanical_press_compacting.header": "Compacting items with the Mechanical Press",
  "create_brass_coated.ponder.mechanical_press_compacting.text_1": "Pressing items held in a Basin will cause them to be Compacted",
  "create_brass_coated.ponder.mechanical_press_compacting.text_2": "Compacting includes any filled 2x2 or 3x3 Crafting Recipe, plus a couple extra ones",
  "create_brass_coated.ponder.mechanical_press_compacting.text_3": "Some of those recipes may require the heat of a Blaze Burner",
  "create_brass_coated.ponder.mechanical_press_compacting.text_4": "The filter slot can be used in case two recipes are conflicting.",

  "create_brass_coated.ponder.mechanical_pump_flow.header": "Fluid Transportation using Mechanical Pumps",
  "create_brass_coated.ponder.mechanical_pump_flow.text_1": "Mechanical Pumps govern the flow of their attached pipe networks",
  "create_brass_coated.ponder.mechanical_pump_flow.text_2": "When powered, their arrow indicates the direction of flow",
  "create_brass_coated.ponder.mechanical_pump_flow.text_3": "The network behind is now pulling fluids...",
  "create_brass_coated.ponder.mechanical_pump_flow.text_4": "...while the network in front is transferring it outward",
  "create_brass_coated.ponder.mechanical_pump_flow.text_5": "Reversing the input rotation reverses the direction of flow",
  "create_brass_coated.ponder.mechanical_pump_flow.text_6": "Use a Wrench to reverse the orientation of pumps manually",

  "create_brass_coated.ponder.mechanical_pump_speed.header": "Throughput of Mechanical Pumps",
  "create_brass_coated.ponder.mechanical_pump_speed.text_1": "Regardless of speed, Mechanical Pumps affect pipes connected up to 16 blocks away",
  "create_brass_coated.ponder.mechanical_pump_speed.text_2": "Speeding up the input rotation changes the speed of flow propagation...",
  "create_brass_coated.ponder.mechanical_pump_speed.text_3": "...aswell as how quickly fluids are transferred",
  "create_brass_coated.ponder.mechanical_pump_speed.text_4": "Pumps can combine their throughputs within shared pipe networks",
  "create_brass_coated.ponder.mechanical_pump_speed.text_5": "Alternating their orientation can help align their flow directions",

  "create_brass_coated.ponder.mechanical_saw_breaker.header": "Cutting Trees with the Mechanical Saw",
  "create_brass_coated.ponder.mechanical_saw_breaker.text_1": "When given Rotational Force, a Mechanical Saw will cut trees directly in front of it",
  "create_brass_coated.ponder.mechanical_saw_breaker.text_2": "In order to cut the tree fully, the Saw has to break the last block connecting it to the ground",

  "create_brass_coated.ponder.mechanical_saw_contraption.header": "Using Mechanical Saws on Contraptions",
  "create_brass_coated.ponder.mechanical_saw_contraption.text_1": "Whenever Saws are moved as part of an animated Contraption...",
  "create_brass_coated.ponder.mechanical_saw_contraption.text_2": "...they will cut any trees the contraption runs them into",

  "create_brass_coated.ponder.mechanical_saw_processing.header": "Processing Items on the Mechanical Saw",
  "create_brass_coated.ponder.mechanical_saw_processing.text_1": "Upward facing Mechanical Saws can process a variety of items",
  "create_brass_coated.ponder.mechanical_saw_processing.text_2": "The processed item always moves against the rotational input to the saw",
  "create_brass_coated.ponder.mechanical_saw_processing.text_3": "Saws can work in-line with Mechanical Belts",
  "create_brass_coated.ponder.mechanical_saw_processing.text_4": "When an ingredient has multiple possible outcomes, the filter slot can specify it",
  "create_brass_coated.ponder.mechanical_saw_processing.text_5": "Without filter, the Saw would cycle through all outcomes instead",

  "create_brass_coated.ponder.millstone.header": "Processing Items in the Millstone",
  "create_brass_coated.ponder.millstone.text_1": "Millstones process items by grinding them",
  "create_brass_coated.ponder.millstone.text_2": "They can be powered from the side using cogwheels",
  "create_brass_coated.ponder.millstone.text_3": "Throw or Insert items at the top",
  "create_brass_coated.ponder.millstone.text_4": "After some time, the result can be obtained via Right-click",
  "create_brass_coated.ponder.millstone.text_5": "The outputs can also be extracted by automation",

  "create_brass_coated.ponder.nixie_tube.header": "Using Nixie Tubes",
  "create_brass_coated.ponder.nixie_tube.text_1": "When powered by Redstone, Nixie Tubes will display the redstone signals' strength",
  "create_brass_coated.ponder.nixie_tube.text_2": "Using name tags edited with an anvil, custom text can be displayed",
  "create_brass_coated.ponder.nixie_tube.text_3": "Right-Click with Dye to change their display colour",

  "create_brass_coated.ponder.piston_pole.header": "Piston Extension Poles",
  "create_brass_coated.ponder.piston_pole.text_1": "Without attached Poles, a Mechanical Piston cannot move",
  "create_brass_coated.ponder.piston_pole.text_2": "The Length of pole added at its back determines the Extension Range",

  "create_brass_coated.ponder.portable_fluid_interface.header": "Contraption Fluid Exchange",
  "create_brass_coated.ponder.portable_fluid_interface.text_1": "Fluid Tanks on moving contraptions cannot be accessed by any pipes",
  "create_brass_coated.ponder.portable_fluid_interface.text_2": "This component can interact with fluid tanks without the need to stop the contraption",
  "create_brass_coated.ponder.portable_fluid_interface.text_3": "Place a second one with a gap of 1 or 2 blocks inbetween",
  "create_brass_coated.ponder.portable_fluid_interface.text_4": "Whenever they pass by each other, they will engage in a connection",
  "create_brass_coated.ponder.portable_fluid_interface.text_5": "While engaged, the stationary interface will represent ALL Tanks on the contraption",
  "create_brass_coated.ponder.portable_fluid_interface.text_6": "Fluid can now be inserted...",
  "create_brass_coated.ponder.portable_fluid_interface.text_7": "...or extracted from the contraption",
  "create_brass_coated.ponder.portable_fluid_interface.text_8": "After no contents have been exchanged for a while, the contraption will continue on its way",

  "create_brass_coated.ponder.portable_storage_interface.header": "Contraption Storage Exchange",
  "create_brass_coated.ponder.portable_storage_interface.text_1": "Inventories on moving contraptions cannot be accessed by players.",
  "create_brass_coated.ponder.portable_storage_interface.text_2": "This component can interact with storage without the need to stop the contraption.",
  "create_brass_coated.ponder.portable_storage_interface.text_3": "Place a second one with a gap of 1 or 2 blocks inbetween",
  "create_brass_coated.ponder.portable_storage_interface.text_4": "Whenever they pass by each other, they will engage in a connection",
  "create_brass_coated.ponder.portable_storage_interface.text_5": "While engaged, the stationary interface will represent ALL inventories on the contraption",
  "create_brass_coated.ponder.portable_storage_interface.text_6": "Items can now be inserted...",
  "create_brass_coated.ponder.portable_storage_interface.text_7": "...or extracted from the contraption",
  "create_brass_coated.ponder.portable_storage_interface.text_8": "After no items have been exchanged for a while, the contraption will continue on its way",

  "create_brass_coated.ponder.portable_storage_interface_redstone.header": "Redstone Control",
  "create_brass_coated.ponder.portable_storage_interface_redstone.text_1": "Redstone power will prevent the stationary interface from engaging",

  "create_brass_coated.ponder.powered_latch.header": "Controlling signals using the Powered Latch",
  "create_brass_coated.ponder.powered_latch.text_1": "Powered Latches are redstone controllable Levers",
  "create_brass_coated.ponder.powered_latch.text_2": "Signals at the back switch it on",
  "create_brass_coated.ponder.powered_latch.text_3": "Signals from the side switch it back off",
  "create_brass_coated.ponder.powered_latch.text_4": "Powered latches can also be toggled manually",

  "create_brass_coated.ponder.powered_toggle_latch.header": "Controlling signals using the Powered Toggle Latch",
  "create_brass_coated.ponder.powered_toggle_latch.text_1": "Powered Toggle Latches are redstone controllable Levers",
  "create_brass_coated.ponder.powered_toggle_latch.text_2": "Signals at the back will toggle its state",
  "create_brass_coated.ponder.powered_toggle_latch.text_3": "...on and back off",
  "create_brass_coated.ponder.powered_toggle_latch.text_4": "Powered toggle latches can also be toggled manually",

  "create_brass_coated.ponder.pulse_extender.header": "Controlling signals using Pulse Extenders",
  "create_brass_coated.ponder.pulse_extender.text_1": "Pulse Extenders can lengthen a signal passing through",
  "create_brass_coated.ponder.pulse_extender.text_2": "They activate after a short delay...",
  "create_brass_coated.ponder.pulse_extender.text_3": "...and cool down for the configured duration",
  "create_brass_coated.ponder.pulse_extender.text_4": "Using the mouse wheel, the discharge time can be configured",
  "create_brass_coated.ponder.pulse_extender.text_5": "The configured duration can range up to 30 minutes",

  "create_brass_coated.ponder.pulse_repeater.header": "Controlling signals using Pulse Repeaters",
  "create_brass_coated.ponder.pulse_repeater.text_1": "Pulse Repeaters emit a short pulse at a delay",
  "create_brass_coated.ponder.pulse_repeater.text_2": "Using the mouse wheel, the charge time can be configured",
  "create_brass_coated.ponder.pulse_repeater.text_3": "Configured delays can range up to 30 minutes",

  "create_brass_coated.ponder.radial_chassis.header": "Attaching blocks using Radial Chassis",
  "create_brass_coated.ponder.radial_chassis.text_1": "Radial Chassis connect to identical Chassis blocks in a row",
  "create_brass_coated.ponder.radial_chassis.text_2": "When one is moved by a Contraption, the others are dragged with it",
  "create_brass_coated.ponder.radial_chassis.text_3": "The side faces of a Radial Chassis can be made Sticky",
  "create_brass_coated.ponder.radial_chassis.text_4": "Click again to make all other sides sticky",
  "create_brass_coated.ponder.radial_chassis.text_5": "Sneak and Right-Click with an empty hand to remove the slime",
  "create_brass_coated.ponder.radial_chassis.text_6": "Whenever a Block is next to a sticky face...",
  "create_brass_coated.ponder.radial_chassis.text_7": "...it will attach all reachable blocks within a radius on that layer",
  "create_brass_coated.ponder.radial_chassis.text_8": "Using a Wrench, a precise Radius can be specified for this chassis",
  "create_brass_coated.ponder.radial_chassis.text_9": "Blocks not reachable by any sticky face will not attach",

  "create_brass_coated.ponder.redstone_contact.header": "Redstone Contacts",
  "create_brass_coated.ponder.redstone_contact.text_1": "Redstone Contacts facing each other will emit a redstone signal",
  "create_brass_coated.ponder.redstone_contact.text_2": "This still applies when one of them is part of a moving Contraption",

  "create_brass_coated.ponder.redstone_link.header": "Using Redstone Links",
  "create_brass_coated.ponder.redstone_link.text_1": "Redstone Links can transmit redstone signals wirelessly",
  "create_brass_coated.ponder.redstone_link.text_2": "Right-click while Sneaking to toggle receive mode",
  "create_brass_coated.ponder.redstone_link.text_3": "A simple Right-click with a Wrench can do the same",
  "create_brass_coated.ponder.redstone_link.text_4": "Receivers emit the redstone power of transmitters within 128 blocks",
  "create_brass_coated.ponder.redstone_link.text_5": "Placing items in the two slots can specify a Frequency",
  "create_brass_coated.ponder.redstone_link.text_6": "Only the links with matching Frequencies will communicate",

  "create_brass_coated.ponder.rope_pulley.header": "Moving Structures using Rope Pulleys",
  "create_brass_coated.ponder.rope_pulley.text_1": "Rope Pulleys can move blocks vertically when given Rotational Force",
  "create_brass_coated.ponder.rope_pulley.text_2": "Direction and Speed of movement depend on the Rotational Input",

  "create_brass_coated.ponder.rope_pulley_attachment.header": "Moving Pulleys as part of a Contraption",
  "create_brass_coated.ponder.rope_pulley_attachment.text_1": "Whenever Pulleys are themselves being moved by a Contraption...",
  "create_brass_coated.ponder.rope_pulley_attachment.text_2": "...its attached structure will be dragged with it",
  "create_brass_coated.ponder.rope_pulley_attachment.text_3": "Mind that pulleys are only movable while stopped",

  "create_brass_coated.ponder.rope_pulley_modes.header": "Movement Modes of the Rope Pulley",
  "create_brass_coated.ponder.rope_pulley_modes.text_1": "Whenever Pulleys stop moving, the moved structure reverts to blocks",
  "create_brass_coated.ponder.rope_pulley_modes.text_2": "It can be configured never to revert to solid blocks, or only at the location it started at",

  "create_brass_coated.ponder.rose_quartz_lamp.header": "Rose Quartz Lamps",
  "create_brass_coated.ponder.rose_quartz_lamp.text_1": "Rose Quartz Lamps activate on a Redstone signal",
  "create_brass_coated.ponder.rose_quartz_lamp.text_2": "They will continue to emit redstone power afterwards",
  "create_brass_coated.ponder.rose_quartz_lamp.text_3": "When multiple lamps are arranged in a group...",
  "create_brass_coated.ponder.rose_quartz_lamp.text_4": "...activating a Lamp will focus the signal to it, deactivating all others",
  "create_brass_coated.ponder.rose_quartz_lamp.text_5": "Comparators output based on the distance to a powered lamp",
  "create_brass_coated.ponder.rose_quartz_lamp.text_6": "The Lamps can also be toggled manually using a Wrench",

  "create_brass_coated.ponder.rotation_speed_controller.header": "Using the Rotational Speed Controller",
  "create_brass_coated.ponder.rotation_speed_controller.text_1": "Rot. Speed Controllers relay rotation from their axis to a Large Cogwheel above them",
  "create_brass_coated.ponder.rotation_speed_controller.text_2": "Using the scroll input on its side, the conveyed speed can be configured",

  "create_brass_coated.ponder.sail.header": "Assembling Windmills using Sails",
  "create_brass_coated.ponder.sail.text_1": "Sails are handy blocks to create Windmills with",
  "create_brass_coated.ponder.sail.text_2": "They will attach to blocks and each other without the need of Super Glue or Chassis Blocks",
  "create_brass_coated.ponder.sail.text_3": "Right-Click with Dye to paint them",
  "create_brass_coated.ponder.sail.text_4": "Right-Click with Shears to turn them back into frames",

  "create_brass_coated.ponder.sail_frame.header": "Assembling Windmills using Sail Frames",
  "create_brass_coated.ponder.sail_frame.text_1": "Sail Frames are handy blocks to create Windmills with",
  "create_brass_coated.ponder.sail_frame.text_2": "They will attach to blocks and each other without the need of Super Glue or Chassis Blocks",

  "create_brass_coated.ponder.sequenced_gearshift.header": "Controlling Rotational Speed using Sequenced Gearshifts",
  "create_brass_coated.ponder.sequenced_gearshift.text_1": "Seq. Gearshifts relay rotation by following a timed list of instructions",
  "create_brass_coated.ponder.sequenced_gearshift.text_2": "Right-click it to open the Configuration UI",
  "create_brass_coated.ponder.sequenced_gearshift.text_3": "Upon receiving a Redstone Signal, it will start running its configured sequence",
  "create_brass_coated.ponder.sequenced_gearshift.text_4": "Once finished, it waits for the next Redstone Signal and starts over",
  "create_brass_coated.ponder.sequenced_gearshift.text_5": "A redstone comparator can be used to read the current progress",

  "create_brass_coated.ponder.shaft.header": "Relaying rotational force using Shafts",
  "create_brass_coated.ponder.shaft.text_1": "Shafts will relay rotation in a straight line.",

  "create_brass_coated.ponder.shaft_casing.header": "Encasing Shafts",
  "create_brass_coated.ponder.shaft_casing.text_1": "Brass or Andesite Casing can be used to decorate Shafts",

  "create_brass_coated.ponder.smart_chute.header": "Filtering Items using Smart Chutes",
  "create_brass_coated.ponder.smart_chute.text_1": "Smart Chutes are vertical chutes with additional control",
  "create_brass_coated.ponder.smart_chute.text_2": "Items in the filter slot specify what exactly they can extract and transfer",
  "create_brass_coated.ponder.smart_chute.text_3": "Use the Mouse Wheel to specify the extracted stack size",
  "create_brass_coated.ponder.smart_chute.text_4": "Redstone power will prevent Smart Chutes from acting.",

  "create_brass_coated.ponder.smart_pipe.header": "Controlling Fluid flow using Smart Pipes",
  "create_brass_coated.ponder.smart_pipe.text_1": "Smart pipes can help control flows by fluid type",
  "create_brass_coated.ponder.smart_pipe.text_2": "When placed directly at the source, they can specify the type of fluid to extract",
  "create_brass_coated.ponder.smart_pipe.text_3": "Simply Right-Click their filter slot with any item containing the desired fluid",
  "create_brass_coated.ponder.smart_pipe.text_4": "When placed further down a pipe network, smart pipes will only let matching fluids continue",

  "create_brass_coated.ponder.speedometer.header": "Monitoring Kinetic information using the Speedometer",
  "create_brass_coated.ponder.speedometer.text_1": "The Speedometer displays the current Speed of the attached components",
  "create_brass_coated.ponder.speedometer.text_2": "When wearing Engineers' Goggles, the player can get more detailed information from the Gauge",
  "create_brass_coated.ponder.speedometer.text_3": "Comparators can emit analog Restone Signals relative to the Speedometer's measurements",

  "create_brass_coated.ponder.spout_filling.header": "Filling Items using a Spout",
  "create_brass_coated.ponder.spout_filling.text_1": "The Spout can fill fluid holding items provided beneath it",
  "create_brass_coated.ponder.spout_filling.text_2": "The content of a Spout cannot be accessed manually",
  "create_brass_coated.ponder.spout_filling.text_3": "Instead, Pipes can be used to supply it with fluids",
  "create_brass_coated.ponder.spout_filling.text_4": "The Input items can be placed on a Depot under the Spout",
  "create_brass_coated.ponder.spout_filling.text_5": "When items are provided on a belt...",
  "create_brass_coated.ponder.spout_filling.text_6": "The Spout will hold and process them automatically",

  "create_brass_coated.ponder.stabilized_bearings.header": "Stabilized Contraptions",
  "create_brass_coated.ponder.stabilized_bearings.text_1": "Whenever Mechanical Bearings are themselves part of a moving Structure..",
  "create_brass_coated.ponder.stabilized_bearings.text_2": "..they will attempt to keep themselves upright",
  "create_brass_coated.ponder.stabilized_bearings.text_3": "Once again, the bearing will attach to the block in front of it",
  "create_brass_coated.ponder.stabilized_bearings.text_4": "As a result, the entire sub-Contraption will stay upright",

  "create_brass_coated.ponder.steam_engine.header": "Setting up Steam Engines",
  "create_brass_coated.ponder.steam_engine.text_1": "Steam Engines can be placed on a Fluid Tank",
  "create_brass_coated.ponder.steam_engine.text_10": "Lvl 4",
  "create_brass_coated.ponder.steam_engine.text_11": "4 Engines",
  "create_brass_coated.ponder.steam_engine.text_12": "Lvl 8",
  "create_brass_coated.ponder.steam_engine.text_13": "8 Engines",
  "create_brass_coated.ponder.steam_engine.text_2": "Clicking the engine with a Shaft creates the Kinetic Output",
  "create_brass_coated.ponder.steam_engine.text_3": "With sufficient Heat, Water and Boiler space...",
  "create_brass_coated.ponder.steam_engine.text_4": "...they will generate Rotational Force",
  "create_brass_coated.ponder.steam_engine.text_5": "The minimal setup requires 4 Fluid Tanks",
  "create_brass_coated.ponder.steam_engine.text_6": "With the help of Blaze Burners, the power output can be increased",
  "create_brass_coated.ponder.steam_engine.text_7": "Higher power levels require more Water, Size and Heat",
  "create_brass_coated.ponder.steam_engine.text_8": "The boiler's current power level can be inspected with Engineer's Goggles",
  "create_brass_coated.ponder.steam_engine.text_9": "With each added power level, an additional Engine can output at full capacity",

  "create_brass_coated.ponder.steam_whistle.header": "Setting up Steam Whistles",
  "create_brass_coated.ponder.steam_whistle.text_1": "Steam Whistles can be placed on a Fluid Tank",
  "create_brass_coated.ponder.steam_whistle.text_2": "If the tank receives sufficient heat...",
  "create_brass_coated.ponder.steam_whistle.text_3": "...the Whistle will play a note when activated",
  "create_brass_coated.ponder.steam_whistle.text_4": "Use a Whistle item on the block to lower its pitch",
  "create_brass_coated.ponder.steam_whistle.text_5": "Cycle between three different octaves using a Wrench",
  "create_brass_coated.ponder.steam_whistle.text_6": "Engineer's Goggles can help to find out the current pitch of a Whistle",

  "create_brass_coated.ponder.sticker.header": "Attaching blocks using the Sticker",
  "create_brass_coated.ponder.sticker.text_1": "Stickers are ideal for Redstone-controlled block attachment",
  "create_brass_coated.ponder.sticker.text_2": "Upon receiving a signal, it will toggle its state",
  "create_brass_coated.ponder.sticker.text_3": "If it is now moved in a contraption, the block will move with it",
  "create_brass_coated.ponder.sticker.text_4": "Toggled once again, the block is no longer attached",

  "create_brass_coated.ponder.stressometer.header": "Monitoring Kinetic information using the Stressometer",
  "create_brass_coated.ponder.stressometer.text_1": "The Stressometer displays the current Stress Capacity of the attached kinetic network",
  "create_brass_coated.ponder.stressometer.text_2": "When wearing Engineers' Goggles, the player can get more detailed information from the Gauge",
  "create_brass_coated.ponder.stressometer.text_3": "Comparators can emit analog Restone Signals relative to the Stressometer's measurements",

  "create_brass_coated.ponder.super_glue.header": "Attaching blocks using Super Glue",
  "create_brass_coated.ponder.super_glue.text_1": "Super Glue groups blocks together into moving contraptions",
  "create_brass_coated.ponder.super_glue.text_2": "Clicking two endpoints creates a new 'glued' area",
  "create_brass_coated.ponder.super_glue.text_3": "To remove a box, punch it with the glue item in hand",
  "create_brass_coated.ponder.super_glue.text_4": "Adjacent blocks sharing an area will pull each other along",
  "create_brass_coated.ponder.super_glue.text_5": "Overlapping glue volumes will move together",
  "create_brass_coated.ponder.super_glue.text_6": "Blocks hanging on others usually do not require glue",

  "create_brass_coated.ponder.track_chunks.header": "Traversing unloaded Chunks",
  "create_brass_coated.ponder.track_chunks.text_1": "Tracks stay functional outside of loaded chunks",
  "create_brass_coated.ponder.track_chunks.text_2": "Trains will travel through inactive sections of the world without issue",
  "create_brass_coated.ponder.track_chunks.text_3": "They will still stop at stations or red signals",
  "create_brass_coated.ponder.track_chunks.text_4": "However, Drills and other on-board machines will not operate",
  "create_brass_coated.ponder.track_chunks.text_5": "Once near a Player, the train will re-appear",

  "create_brass_coated.ponder.track_observer.header": "Detecting Trains",
  "create_brass_coated.ponder.track_observer.text_1": "Select a Train Track then place the Observer nearby",
  "create_brass_coated.ponder.track_observer.text_2": "The Observer will detect any Trains passing over the marker",
  "create_brass_coated.ponder.track_observer.text_3": "Observers can be filtered to activate for matching cargo",

  "create_brass_coated.ponder.track_placement.header": "Placing Train Tracks",
  "create_brass_coated.ponder.track_placement.text_1": "A new type of rail designed for Train Contraptions",
  "create_brass_coated.ponder.track_placement.text_2": "To place rows of track in bulk, click on an existing track",
  "create_brass_coated.ponder.track_placement.text_3": "Then place or select a second track",
  "create_brass_coated.ponder.track_placement.text_4": "Tracks can also be placed as turns or slopes",
  "create_brass_coated.ponder.track_placement.text_5": "When connecting, tracks will try to make each turn equally sized",
  "create_brass_coated.ponder.track_placement.text_6": "Holding the sprint key while connecting...",
  "create_brass_coated.ponder.track_placement.text_7": "...will create the longest fitting bend instead",
  "create_brass_coated.ponder.track_placement.text_8": "Materials in the off-hand will be paved under tracks automatically",

  "create_brass_coated.ponder.track_portal.header": "Tracks and the Nether",
  "create_brass_coated.ponder.track_portal.text_1": "Tracks placed up against a nether portal...",
  "create_brass_coated.ponder.track_portal.text_2": "...will attempt to create a paired track on the other side",
  "create_brass_coated.ponder.track_portal.text_3": "Trains on this track are now able to travel across dimensions",

  "create_brass_coated.ponder.train_assembly.header": "Assembling Trains",
  "create_brass_coated.ponder.train_assembly.text_1": "Select a Train Track then place the Station nearby",
  "create_brass_coated.ponder.train_assembly.text_10": "Every Train requires Train Controls on board",
  "create_brass_coated.ponder.train_assembly.text_11": "An optional second one allows departure from Stations in both directions",
  "create_brass_coated.ponder.train_assembly.text_12": "Open the Station UI and confirm the Assembly process",
  "create_brass_coated.ponder.train_assembly.text_13": "Trains can be disassembled back into blocks at stations only",
  "create_brass_coated.ponder.train_assembly.text_14": "When used on a station, maps will add a labeled marker at the location",
  "create_brass_coated.ponder.train_assembly.text_15": "Assembled Trains can be relocated to nearby Tracks using the Wrench",
  "create_brass_coated.ponder.train_assembly.text_2": "Stations are the Waypoints of your Track Network",
  "create_brass_coated.ponder.train_assembly.text_3": "To create a new Train, open the UI and switch to Assembly Mode",
  "create_brass_coated.ponder.train_assembly.text_4": "During Assembly no scheduled trains will approach this station",
  "create_brass_coated.ponder.train_assembly.text_5": "Create new bogeys by using Train Casing on Tracks",
  "create_brass_coated.ponder.train_assembly.text_6": "Click the track again to cycle between bogey designs",
  "create_brass_coated.ponder.train_assembly.text_7": "Attach blocks with the help of Super Glue",
  "create_brass_coated.ponder.train_assembly.text_8": "Assembled Trains will move faster if they can find fuel in assembled chests or barrels",
  "create_brass_coated.ponder.train_assembly.text_9": "Fuel stored in Vaults will not be consumed by the train",

  "create_brass_coated.ponder.train_controls.header": "Controlling Trains",
  "create_brass_coated.ponder.train_controls.text_1": "Train Controls are required on every train contraption",
  "create_brass_coated.ponder.train_controls.text_2": "Once assembled, right-click the block to start driving",
  "create_brass_coated.ponder.train_controls.text_3": "Accelerate and steer the Train using movement keybinds",
  "create_brass_coated.ponder.train_controls.text_4": "If desired, the top speed can be fine-tuned using the mouse wheel",
  "create_brass_coated.ponder.train_controls.text_5": "Hold space to approach a nearby Station",
  "create_brass_coated.ponder.train_controls.text_6": "Trains can only be disassembled back into blocks at Stations",
  "create_brass_coated.ponder.train_controls.text_7": "Assembled Whistles can be activated with the sprint key",
  "create_brass_coated.ponder.train_controls.text_8": "Sneak or click again to stop controlling the Train",

  "create_brass_coated.ponder.train_schedule.header": "Using Train Schedules",
  "create_brass_coated.ponder.train_schedule.text_1": "Schedules allow Trains to be controlled by other Drivers",
  "create_brass_coated.ponder.train_schedule.text_2": "Right-click with the item in hand to open its Interface",
  "create_brass_coated.ponder.train_schedule.text_3": "Once programmed, the Schedule can be handed off to a Train Driver",
  "create_brass_coated.ponder.train_schedule.text_4": "Any mob or blaze burner sitting in front of Train Controls is an eligible conductor",
  "create_brass_coated.ponder.train_schedule.text_5": "Creatures on a lead can be given their seat more conveniently",
  "create_brass_coated.ponder.train_schedule.text_6": "Schedules can be retrieved from Drivers at any moment",

  "create_brass_coated.ponder.train_signal_placement.header": "Placing Train Signals",
  "create_brass_coated.ponder.train_signal_placement.text_1": "Select a Train Track then place the Signal nearby",
  "create_brass_coated.ponder.train_signal_placement.text_2": "Signals control the flow of Trains not driven by players",
  "create_brass_coated.ponder.train_signal_placement.text_3": "Scheduled Trains will never cross signals in the opposite direction",
  "create_brass_coated.ponder.train_signal_placement.text_4": "...unless a second signal is added facing the opposite way.",
  "create_brass_coated.ponder.train_signal_placement.text_5": "Nixie tubes can be attached to make a signal's lights more visible",

  "create_brass_coated.ponder.train_signal_redstone.header": "Signals & Redstone",
  "create_brass_coated.ponder.train_signal_redstone.text_1": "Signals can be forced red by a redstone signal",
  "create_brass_coated.ponder.train_signal_redstone.text_2": "Reversely, red signals emit a comparator output",

  "create_brass_coated.ponder.train_signal_signaling.header": "Collision Prevention with Signals",
  "create_brass_coated.ponder.train_signal_signaling.text_1": "Train Signals divide a track into segments",
  "create_brass_coated.ponder.train_signal_signaling.text_2": "If a Segment is occupied, no other Trains will be allowed entry",
  "create_brass_coated.ponder.train_signal_signaling.text_3": "Thus, each Segment will contain only one Train at a time",
  "create_brass_coated.ponder.train_signal_signaling.text_4": "A second Signal mode is available via the Wrench",
  "create_brass_coated.ponder.train_signal_signaling.text_5": "Segments of a brass signal usually lead into standard signals",
  "create_brass_coated.ponder.train_signal_signaling.text_6": "This special Signal can stop trains under a second condition",
  "create_brass_coated.ponder.train_signal_signaling.text_7": "It will stop Trains, which, upon entering...",
  "create_brass_coated.ponder.train_signal_signaling.text_8": "...would not be able to leave the Segment immediately",
  "create_brass_coated.ponder.train_signal_signaling.text_9": "This helps keeping queued Trains out of a busy Segment",

  "create_brass_coated.ponder.valve_handle.header": "Generating Rotational Force using Valve Handles",
  "create_brass_coated.ponder.valve_handle.text_1": "Valve Handles can be used by players to apply rotational force manually",
  "create_brass_coated.ponder.valve_handle.text_2": "Hold Right-Click to rotate it Counter-Clockwise",
  "create_brass_coated.ponder.valve_handle.text_3": "Its conveyed speed is slow and precise",
  "create_brass_coated.ponder.valve_handle.text_4": "Sneak and Hold Right-Click to rotate it Clockwise",
  "create_brass_coated.ponder.valve_handle.text_5": "Valve handles can be dyed for aesthetic purposes",

  "create_brass_coated.ponder.valve_pipe.header": "Controlling Fluid flow using Valves",
  "create_brass_coated.ponder.valve_pipe.text_1": "Valve pipes help control fluids propagating through pipe networks",
  "create_brass_coated.ponder.valve_pipe.text_2": "Their shaft input controls whether fluid is currently allowed through",
  "create_brass_coated.ponder.valve_pipe.text_3": "Given Rotational Force in the opening direction, the valve will open up",
  "create_brass_coated.ponder.valve_pipe.text_4": "It can be closed again by reversing the input rotation",

  "create_brass_coated.ponder.water_wheel.header": "Generating Rotational Force using Water Wheels",
  "create_brass_coated.ponder.water_wheel.text_1": "Water Wheels draw force from adjacent Water Currents",
  "create_brass_coated.ponder.water_wheel.text_2": "The more faces are powered, the faster the Water Wheel will rotate",
  "create_brass_coated.ponder.water_wheel.text_3": "The Wheels' blades should be oriented against the flow",
  "create_brass_coated.ponder.water_wheel.text_4": "Facing the opposite way, they will not be as effective",

  "create_brass_coated.ponder.brass_weighted_ejector.header": "Using Weighted Ejectors",
  "create_brass_coated.ponder.brass_weighted_ejector.text_1": "Sneak and Right-Click holding an Ejector to select its target location",
  "create_brass_coated.ponder.brass_weighted_ejector.text_10": "It is now limited to this stack size, and only activates when its held stack reaches this amount",
  "create_brass_coated.ponder.brass_weighted_ejector.text_11": "Other Entities will always trigger an Ejector when stepping on it",
  "create_brass_coated.ponder.brass_weighted_ejector.text_2": "The placed ejector will now launch objects to the marked location",
  "create_brass_coated.ponder.brass_weighted_ejector.text_3": "A valid target can be at any height or distance within range",
  "create_brass_coated.ponder.brass_weighted_ejector.text_4": "They cannot however be off to a side",
  "create_brass_coated.ponder.brass_weighted_ejector.text_5": "If no valid Target was selected, it will simply target the block directly in front",
  "create_brass_coated.ponder.brass_weighted_ejector.text_6": "Supply Rotational Force in order to charge it up",
  "create_brass_coated.ponder.brass_weighted_ejector.text_7": "Items placed on the ejector cause it to trigger",
  "create_brass_coated.ponder.brass_weighted_ejector.text_8": "If Inventories are targeted, the ejector will wait until there is space",
  "create_brass_coated.ponder.brass_weighted_ejector.text_9": "Using the Wrench, a required Stack Size can be configured",

  "create_brass_coated.ponder.weighted_ejector_redstone.header": "Controlling Weighted Ejectors with Redstone",
  "create_brass_coated.ponder.weighted_ejector_redstone.text_1": "When powered by Redstone, Ejectors will not activate",
  "create_brass_coated.ponder.weighted_ejector_redstone.text_2": "Furthermore, Observers can detect when Ejectors activate",

  "create_brass_coated.ponder.weighted_ejector_tunnel.header": "Splitting item stacks using Weighted Ejectors",
  "create_brass_coated.ponder.weighted_ejector_tunnel.text_1": "Combined with Brass Tunnels, Ejectors can split item stacks by specific amounts",
  "create_brass_coated.ponder.weighted_ejector_tunnel.text_2": "First, configure the Brass Tunnel to 'Prefer Nearest', in order to prioritize its side output",
  "create_brass_coated.ponder.weighted_ejector_tunnel.text_3": "The Stack Size set on the Ejector now determines the amount to be split off",
  "create_brass_coated.ponder.weighted_ejector_tunnel.text_4": "While a new stack of the configured size exits the side output...",
  "create_brass_coated.ponder.weighted_ejector_tunnel.text_5": "...the remainder will continue on its path",

  "create_brass_coated.ponder.windmill_source.header": "Generating Rotational Force using Windmill Bearings",
  "create_brass_coated.ponder.windmill_source.text_1": "Windmill Bearings attach to the block in front of them",
  "create_brass_coated.ponder.windmill_source.text_2": "Create a movable structure with the help of Super Glue",
  "create_brass_coated.ponder.windmill_source.text_3": "If enough Sail-like blocks are included, this can act as a Windmill",
  "create_brass_coated.ponder.windmill_source.text_4": "Activated with Right-Click, the Windmill Bearing will start providing Rotational Force",
  "create_brass_coated.ponder.windmill_source.text_5": "The Amount of Sail Blocks determine its Rotation Speed",
  "create_brass_coated.ponder.windmill_source.text_6": "Use a Wrench to configure its rotation direction",
  "create_brass_coated.ponder.windmill_source.text_7": "Right-click the Bearing anytime to stop and edit the Structure again",

  "create_brass_coated.ponder.windmill_structure.header": "Windmill Contraptions",
  "create_brass_coated.ponder.windmill_structure.text_1": "Any Structure can count as a valid Windmill, as long as it contains at least 8 sail-like Blocks.",

  "create.block.brass_deployer.damage_source_name": "a rogue Brass Deployer",
  "create.tooltip.brass_deployer.header": "Brass Deployer Information",
  "create.tooltip.brass_deployer.using": "Mode: Use",
  "create.tooltip.brass_deployer.punching": "Mode: Attack",
  "create.tooltip.brass_deployer.contains": "Item: %1$s x%2$s",

  "create.brass_weighted_ejector.target_set": "Target Selected",
  "create.brass_weighted_ejector.target_not_valid": "Ejecting to Adjacent block (Target was not Valid)",
  "create.brass_weighted_ejector.no_target": "Ejecting to Adjacent block (No Target was Selected)",
  "create.brass_weighted_ejector.targeting": "Ejecting to [%1$s,%2$s,%3$s]",
  "create.brass_weighted_ejector.stack_size": "Ejected Stack Size",

  "itemGroup.create_brass_coated": "Create: Brass Coated"
}